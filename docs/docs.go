// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/v1/contacts": {
            "get": {
                "description": "Get a list of employees with their basic contact information like name, email, phone, etc.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "Get a list of employee contacts by admin",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of contacts per page",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeContactWithPagination"
                        }
                    }
                }
            }
        },
        "/admin/v1/leaves": {
            "get": {
                "description": "Get a list of leave details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave"
                ],
                "summary": "Get a list of leaves by admin",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of leaves per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status for query",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of leaves",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.LeaveWithPagination"
                            }
                        }
                    }
                }
            }
        },
        "/admin/v1/leaves/{id}": {
            "put": {
                "description": "Review the employee's leave application by admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave"
                ],
                "summary": "Review Leave",
                "parameters": [
                    {
                        "description": "Leave request details",
                        "name": "reviewLeaveRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ReviewLeaveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/v1/login": {
            "post": {
                "description": "Login with company email and password to receive an authentication token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login request with company email and password",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"token\": \"{token}\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/v1/contact": {
            "get": {
                "description": "Retrieve contact details of an employee by their Token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "Get Employee Contact Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeContact"
                        }
                    }
                }
            }
        },
        "/user/v1/leave": {
            "post": {
                "description": "Create a new leave request for the employee by providing leave details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave"
                ],
                "summary": "Create a Leave Request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Leave request details",
                        "name": "createLeaveRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateLeaveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create leave successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.CreateLeaveRequest": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "leave_type": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "requests.ReviewLeaveRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "response.EmployeeContact": {
            "type": "object",
            "properties": {
                "company_email": {
                    "type": "string"
                },
                "job_role": {
                    "type": "string"
                },
                "living_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                }
            }
        },
        "response.EmployeeContactWithPagination": {
            "type": "object",
            "properties": {
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.EmployeeContact"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/response.Pagination"
                }
            }
        },
        "response.Leave": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "leave_type": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.LeaveWithPagination": {
            "type": "object",
            "properties": {
                "leaves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Leave"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/response.Pagination"
                }
            }
        },
        "response.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Human resource service",
	Description:      "The simple hr management service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
